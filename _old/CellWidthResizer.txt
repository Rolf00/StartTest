//////////////////////////////////////////////////////////////////
// cell width resizer with flex

      <TableCell className={classes.table_head_cell} >
        <div 
          style={{
            display: 'flex',
            width: '100%',
            height: height,
            padding: '0px',
            borderBottomColor: 'black',
            borderBottomStyle: 'solid',
            borderBottomWidth: '1px',
            padding: '0px',
         }}
        >
          {hasHeaderMenu && this.props.headerHorizontalAlign === IConst.horizontalAlign_Right &&
          <div style={{
            display: 'flex',
            justifyContent: 'flex_end', 
            alignItems: verticalAlign, 
            textAlign: 'left',
            width: '40px',
            padding: '0px 1px',
          }}>
            <ITableMenu
              headers={this.props.headers}
              headerIndex={headerIndex}
              HideColumn={() => this.props.HideColumn(headerIndex)}
            ></ITableMenu>
          </div>}

          <div style={{
            display: 'flex',
            justifyContent: horizontalAlign, 
            alignItems: verticalAlign, 
            textAlign: 'left',
            flex: 1,
            padding: '5px',
          }}>{children}</div>

          {hasHeaderMenu && this.props.headerHorizontalAlign !== IConst.horizontalAlign_Right &&
          <div style={{
            display: 'flex',
            justifyContent: 'flex-start', 
            alignItems: verticalAlign, 
            textAlign: 'left',
            width: '40px',
            padding: '0px 1px',
          }}>
            <ITableMenu
              headers={this.props.headers}
              headerIndex={headerIndex}
              HideColumn={() => this.props.HideColumn(headerIndex)}
              ></ITableMenu>
          </div>}

          {(!notResizable) &&
          <div 
            className={classes.resizerEW}
            onMouseDown={(e) => this.props.handleMouseDownRowEW(e, headerIndex)} 
          >&nbsp;</div>}

        </div>
      </TableCell>


//////////////////////////////////////////////////////////////////
// cell width resizer old


      <TableCell className={classes.table_head_cell} >
        <div className={classes.resizerEW_Top} >
          {hasHeaderMenu && this.props.headerHorizontalAlign === IConst.horizontalAlign_Right &&
          <div 
            //className={classes.resizerEW_Menu_Left}
            style={{
              padding: '5px 0px', 
              minHeight: height, 
              display: 'flex',
              width: '40px',
              textAlign: horizontalAlign,
              justifyContent: verticalAlign,
            }}
          >
            <ITableMenu
              headers={this.props.headers}
              headerIndex={headerIndex}
              HideColumn={() => this.props.HideColumn(headerIndex)}
            ></ITableMenu> 
          </div>}

          <div
            className={classes.resizerEW_Caption}
            style={{
              minHeight: height, 
              textAlign: horizontalAlign,
              justifyContent: verticalAlign,
            }}
          >
            <div>{children}</div>
          </div>

          {hasHeaderMenu && this.props.headerHorizontalAlign !== IConst.horizontalAlign_Right &&
          <div 
          //className={classes.resizerEW_Menu_Left}
          style={{
            padding: '5px 0px', 
            minHeight: height, 
            width: '40px',
            display: 'flex',
            textAlign: horizontalAlign,
            justifyContent: verticalAlign,
          }}
        >
          <ITableMenu
            headers={this.props.headers}
            headerIndex={headerIndex}
            HideColumn={() => this.props.HideColumn(headerIndex)}
          ></ITableMenu> 
        </div>}
        {/* 
          <div style={{ display: 'flex', flexDirection: 'column', minHeight: height, }}>
            <div style={{ flex: 1, }}></div>
            <div 
              className={classes.resizerEW_Menu_Right}
              style={{ justifyContent: verticalAlign, }}
            >
              <ITableMenu
                headers={this.props.headers}
                headerIndex={headerIndex}
                HideColumn={() => this.props.HideColumn(headerIndex)}
                ></ITableMenu>
            </div>
          </div>
          */}
       

          {(!notResizable) &&
          <div 
            className={classes.resizerEW}
            onMouseDown={(e) => this.props.handleMouseDownRowEW(e, headerIndex)} 
          >&nbsp;</div>}
        </div>
      </TableCell>



///////////////////////////////////////////////////////////////////////////
// Older


      <TableCell className={classes.table_head_cell} >
        <div className={classes.resizerEW_Top} >

          {hasHeaderMenu && horizontalAlign == 'right' &&
          <div className={classes.resizerEW_Menu_Left}
            style={{
              minHeight: height, 
              textAlign: horizontalAlign,
              justifyContent: verticalAlignText,
            }}
          >
            <ITableMenu
              headers={headers}
              headerIndex={headerIndex}
              HideColumn={() => this.props.HideColumn(headerIndex)}
            ></ITableMenu> 
          </div>}

          <div
            className={classes.resizerEW_Caption}
            style={{
              minHeight: height, 
              textAlign: horizontalAlign,
              justifyContent: verticalAlignText,
            }}
          >
            <div>{children}</div>
          </div>

          {hasHeaderMenu && 
            (horizontalAlign == 'left' || horizontalAlign == 'center') &&
          <div style={{ display: 'flex', flexDirection: 'column', minHeight: height, }}>
            <div style={{ flex: 1, }}></div>
            <div 
              className={classes.resizerEW_Menu_Right}
              style={{ justifyContent: verticalAlignText, }}
            >
              <ITableMenu
                headers={this.props.headers}
                headerIndex={headerIndex}
                HideColumn={() => this.props.HideColumn(headerIndex)}
                ></ITableMenu>
            </div>
          </div>
          }

          {(!notResizable) &&
          <div 
            className={classes.resizerEW}
            onMouseDown={(e) => this.props.handleMouseDownRowEW(e, headerIndex)} 
          >&nbsp;</div>}

        </div>
      </TableCell>



 

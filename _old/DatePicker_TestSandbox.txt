import React, { useState } from "react";
import { DemoContainer } from "@mui/x-date-pickers/internals/demo";
import { AdapterDayjs } from "@mui/x-date-pickers/AdapterDayjs";
import { LocalizationProvider } from "@mui/x-date-pickers/LocalizationProvider";
import { DatePicker } from "@mui/x-date-pickers/DatePicker";
import IconButton from "@mui/material/IconButton";
import dayjs from "dayjs";

export default function FormPropsDatePickers() {
  const [date, setDate] = useState(dayjs());
  const [info, setInfo] = useState("info");

  const setNewDate = () => {
    //const value = new Date(2024, 9, 23);
    const value = "09/23/2024";
    const newd = {
      $L: "en",
      $u: undefined,
      $d: undefined,
      $y: 2024,
      $M: 6,
      $D: 23,
      $W: null,
      $H: 0,
      $m: 0,
      $s: 0,
      $ms: 0,
      $x: null,
      $isDayjsObject: true,
    };
    //setInfo(newd.toString());
    //const newDate = new Date();
    //setInfo(newDate.toString());

    const year = 2024;
    const month = 10 - 1;
    const day = 23;

    const jsdt = new Date(year, month, day);
    setInfo(jsdt.toString());

    const dt = dayjs(jsdt);
    setDate(dt);
  };

  const getValueClick = () => {
    // {$L, $u, $d, $y, $M, $D, $W, $H, $m, $s, $ms, $x, $isDayjsObject}
    //setInfo(this.date === null ? "null" : this.date.toString());
  };

  const onDateChanged = (e) => {
    const year = parseInt(e.$y);
    const month = parseInt(e.$M) + 1;
    const day = parseInt(e.$D) + 1;
    const dt = dayjs(year + "-" + month + "-" + day);
    //const newDate = Date(year, month, day, 0, 0, 0);
    setInfo(dt.toString());
    //const text = e.$x.toString();
    //setInfo(text);
  };

  return (
    <LocalizationProvider dateAdapter={AdapterDayjs}>
      <IconButton onClick={(e) => getValueClick()}>get value</IconButton>

      <IconButton onClick={(e) => setNewDate()}>set value</IconButton>

      <div style={{ height: "50px" }}>New value "{info}"</div>

      <DemoContainer components={["DatePicker", "DatePicker", "DatePicker"]}>
        <DatePicker
          label="name"
          name="startDate"
          value={date}
          onChange={(value) => onDateChanged(value)}
          //renderInput={(params) => <TextField {...params} />}
        />
      </DemoContainer>
    </LocalizationProvider>
  );
}
